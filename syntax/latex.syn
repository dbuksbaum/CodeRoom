// Language: C++
// Version: 0.1

// Instructions:
// Use \s as space character
// Do not use \n in linespans, use restofline instead
// freewords cannot contain symbols

// Priority:
// behindregexp > multiregexp > multilinespan > regexp > restofline > singlelinespan > freewords > inlinewords
// The lower a span appear in this document, the higher the priority. The above still apply though.

separator:,

singleregexp:
\d
color:	    #AE81FF
bold:	    false
italic:	    false
underline:  false

inlinewords:
{ , }
color:	    #A6E22E
bold:	    false
italic:	    false
underline:  false

inlinewords:
[ , ]
color:	    #A6E22E
bold:	    false
italic:	    false
underline:  false

singleregexp:
\\[a-zA-Z]*
color:	    #66D9EF
bold:	    false
italic:	    false
underline:  false

singleregexp:
\\[a-zA-Z]*(?=[^a-zA-Z{])
color:	    #F92672
bold:	    false
italic:	    false
underline:  false

singleregexp:
\\[^a-zA-Z]
color:	    #AE81FF
bold:	    false
italic:	    false
underline:  false

singleregexp:
\\[L][a][T][e][X]\\
color:	    #F92672
bold:	    false
italic:	    false
underline:  false

// QRegExp does not support lookbehind, this is a workaround
// The expression cannot start with first argument

behindregexp:
\\[[] ,,, [[] ,,, []]
color:	    #A6E22E
bold:	    false
italic:	    false
underline:  false

behindregexp:
\\[{] ,,, [{] ,,, [}]
color:	    #A6E22E
bold:	    false
italic:	    false
underline:  false

behindregexp:
\\[%] ,,, [%] ,,, .*[^\n]
color:	    #E6DB74
bold:	    false
italic:	    false
underline:  false

behindregexp:
\\[$] ,,, [$] ,,, [$]
color:	    #E6DB74
bold:	    false
italic:	    false
underline:  false

behindregexp:
\\[$][$] ,,, [$][$] ,,, [$][$]
color:	    #E6DB74
bold:	    false
italic:	    false
underline:  false
